#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

package_path = os.path.abspath("../..")
# Insert into sys.path so that we can import adaptive here
sys.path.insert(0, package_path)
# Insert into PYTHONPATH so that jupyter-sphinx will pick it up
os.environ["PYTHONPATH"] = ":".join((package_path, os.environ.get("PYTHONPATH", "")))
# Insert `docs/` such that we can run the logo scripts
docs_path = os.path.abspath("..")
sys.path.insert(1, docs_path)

import adaptive  # noqa: E402, isort:skip

# -- Project information -----------------------------------------------------

project = "adaptive"
copyright = "2018-2021, Adaptive Authors"
author = "Adaptive Authors"

# The short X.Y version
version = adaptive.__version__
# The full version, including alpha/beta/rc tags
release = adaptive.__version__


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "jupyter_sphinx",
    "sphinx_fontawesome",
    "m2r2",
]

source_parsers = {}

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]
# source_suffix = '.rst'

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"


jupyter_sphinx_thebelab_config = {
    "requestKernel": True,
    "binderOptions": {"repo": "python-adaptive/adaptive"},
}

jupyter_execute_disable_stderr = True

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"


# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "adaptivedoc"


# -- Extension configuration -------------------------------------------------

default_role = "autolink"

intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "distributed": ("https://distributed.readthedocs.io/en/stable/", None),
    "holoviews": ("https://holoviews.org/", None),
    "ipyparallel": ("https://ipyparallel.readthedocs.io/en/stable/", None),
    "scipy": ("https://docs.scipy.org/doc/scipy/reference", None),
    "loky": ("https://loky.readthedocs.io/en/stable/", None),
}

html_js_files = [
    "https://cdn.bokeh.org/bokeh/release/bokeh-2.4.0.min.js",
    "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.0.min.js",
    "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.4.0.min.js",
    "https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.4.0.min.js",
    "https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-2.4.0.min.js",
]


html_logo = "_static/logo_docs.png"


def setup(app):
    app.add_css_file("custom.css")  # For the `live_info` widget
